// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: review/v1/review.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrderId       int64                  `protobuf:"varint,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Score         int32                  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	ServiceScore  int32                  `protobuf:"varint,4,opt,name=serviceScore,proto3" json:"serviceScore,omitempty"`
	ExpreeScore   int32                  `protobuf:"varint,5,opt,name=expreeScore,proto3" json:"expreeScore,omitempty"`
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Picinfo       string                 `protobuf:"bytes,7,opt,name=picinfo,proto3" json:"picinfo,omitempty"`
	VideoInfo     string                 `protobuf:"bytes,8,opt,name=videoInfo,proto3" json:"videoInfo,omitempty"`
	Annoymous     bool                   `protobuf:"varint,9,opt,name=annoymous,proto3" json:"annoymous,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateReviewRequest) Reset() {
	*x = CreateReviewRequest{}
	mi := &file_review_v1_review_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewRequest) ProtoMessage() {}

func (x *CreateReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewRequest.ProtoReflect.Descriptor instead.
func (*CreateReviewRequest) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{0}
}

func (x *CreateReviewRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateReviewRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CreateReviewRequest) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *CreateReviewRequest) GetServiceScore() int32 {
	if x != nil {
		return x.ServiceScore
	}
	return 0
}

func (x *CreateReviewRequest) GetExpreeScore() int32 {
	if x != nil {
		return x.ExpreeScore
	}
	return 0
}

func (x *CreateReviewRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateReviewRequest) GetPicinfo() string {
	if x != nil {
		return x.Picinfo
	}
	return ""
}

func (x *CreateReviewRequest) GetVideoInfo() string {
	if x != nil {
		return x.VideoInfo
	}
	return ""
}

func (x *CreateReviewRequest) GetAnnoymous() bool {
	if x != nil {
		return x.Annoymous
	}
	return false
}

type CreateReviewReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewId      int64                  `protobuf:"varint,1,opt,name=reviewId,proto3" json:"reviewId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateReviewReply) Reset() {
	*x = CreateReviewReply{}
	mi := &file_review_v1_review_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewReply) ProtoMessage() {}

func (x *CreateReviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewReply.ProtoReflect.Descriptor instead.
func (*CreateReviewReply) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{1}
}

func (x *CreateReviewReply) GetReviewId() int64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

type GetReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewID      int64                  `protobuf:"varint,1,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReviewRequest) Reset() {
	*x = GetReviewRequest{}
	mi := &file_review_v1_review_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRequest) ProtoMessage() {}

func (x *GetReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRequest.ProtoReflect.Descriptor instead.
func (*GetReviewRequest) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{2}
}

func (x *GetReviewRequest) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

type GetReviewReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *ReviewInfo            `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReviewReply) Reset() {
	*x = GetReviewReply{}
	mi := &file_review_v1_review_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewReply) ProtoMessage() {}

func (x *GetReviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewReply.ProtoReflect.Descriptor instead.
func (*GetReviewReply) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{3}
}

func (x *GetReviewReply) GetData() *ReviewInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReviewInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewID      int64                  `protobuf:"varint,1,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	UserID        int64                  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	OrderID       int64                  `protobuf:"varint,3,opt,name=orderID,proto3" json:"orderID,omitempty"`
	Score         int32                  `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	ServiceScore  int32                  `protobuf:"varint,5,opt,name=serviceScore,proto3" json:"serviceScore,omitempty"`
	ExpressScore  int32                  `protobuf:"varint,6,opt,name=expressScore,proto3" json:"expressScore,omitempty"`
	Content       string                 `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	PicInfo       string                 `protobuf:"bytes,8,opt,name=picInfo,proto3" json:"picInfo,omitempty"`
	VideoInfo     string                 `protobuf:"bytes,9,opt,name=videoInfo,proto3" json:"videoInfo,omitempty"`
	Status        int32                  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewInfo) Reset() {
	*x = ReviewInfo{}
	mi := &file_review_v1_review_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewInfo) ProtoMessage() {}

func (x *ReviewInfo) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewInfo.ProtoReflect.Descriptor instead.
func (*ReviewInfo) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{4}
}

func (x *ReviewInfo) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *ReviewInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ReviewInfo) GetOrderID() int64 {
	if x != nil {
		return x.OrderID
	}
	return 0
}

func (x *ReviewInfo) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ReviewInfo) GetServiceScore() int32 {
	if x != nil {
		return x.ServiceScore
	}
	return 0
}

func (x *ReviewInfo) GetExpressScore() int32 {
	if x != nil {
		return x.ExpressScore
	}
	return 0
}

func (x *ReviewInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReviewInfo) GetPicInfo() string {
	if x != nil {
		return x.PicInfo
	}
	return ""
}

func (x *ReviewInfo) GetVideoInfo() string {
	if x != nil {
		return x.VideoInfo
	}
	return ""
}

func (x *ReviewInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AuditRrviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewID      int64                  `protobuf:"varint,1,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	Status        int32                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	OpUser        string                 `protobuf:"bytes,3,opt,name=opUser,proto3" json:"opUser,omitempty"`
	OpReason      string                 `protobuf:"bytes,4,opt,name=opReason,proto3" json:"opReason,omitempty"`
	OpMarks       *string                `protobuf:"bytes,5,opt,name=opMarks,proto3,oneof" json:"opMarks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditRrviewRequest) Reset() {
	*x = AuditRrviewRequest{}
	mi := &file_review_v1_review_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditRrviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditRrviewRequest) ProtoMessage() {}

func (x *AuditRrviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditRrviewRequest.ProtoReflect.Descriptor instead.
func (*AuditRrviewRequest) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{5}
}

func (x *AuditRrviewRequest) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *AuditRrviewRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AuditRrviewRequest) GetOpUser() string {
	if x != nil {
		return x.OpUser
	}
	return ""
}

func (x *AuditRrviewRequest) GetOpReason() string {
	if x != nil {
		return x.OpReason
	}
	return ""
}

func (x *AuditRrviewRequest) GetOpMarks() string {
	if x != nil && x.OpMarks != nil {
		return *x.OpMarks
	}
	return ""
}

type AuditRrviewReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewID      int64                  `protobuf:"varint,1,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	Status        int32                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditRrviewReply) Reset() {
	*x = AuditRrviewReply{}
	mi := &file_review_v1_review_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditRrviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditRrviewReply) ProtoMessage() {}

func (x *AuditRrviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditRrviewReply.ProtoReflect.Descriptor instead.
func (*AuditRrviewReply) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{6}
}

func (x *AuditRrviewReply) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *AuditRrviewReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AppealReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewID      int64                  `protobuf:"varint,1,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	StoreID       int64                  `protobuf:"varint,2,opt,name=storeID,proto3" json:"storeID,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Picinfo       string                 `protobuf:"bytes,7,opt,name=picinfo,proto3" json:"picinfo,omitempty"`
	VideoInfo     string                 `protobuf:"bytes,8,opt,name=videoInfo,proto3" json:"videoInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppealReviewRequest) Reset() {
	*x = AppealReviewRequest{}
	mi := &file_review_v1_review_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppealReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppealReviewRequest) ProtoMessage() {}

func (x *AppealReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppealReviewRequest.ProtoReflect.Descriptor instead.
func (*AppealReviewRequest) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{7}
}

func (x *AppealReviewRequest) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *AppealReviewRequest) GetStoreID() int64 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *AppealReviewRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AppealReviewRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AppealReviewRequest) GetPicinfo() string {
	if x != nil {
		return x.Picinfo
	}
	return ""
}

func (x *AppealReviewRequest) GetVideoInfo() string {
	if x != nil {
		return x.VideoInfo
	}
	return ""
}

type AppealReviewReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppleID       int64                  `protobuf:"varint,1,opt,name=appleID,proto3" json:"appleID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppealReviewReply) Reset() {
	*x = AppealReviewReply{}
	mi := &file_review_v1_review_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppealReviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppealReviewReply) ProtoMessage() {}

func (x *AppealReviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppealReviewReply.ProtoReflect.Descriptor instead.
func (*AppealReviewReply) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{8}
}

func (x *AppealReviewReply) GetAppleID() int64 {
	if x != nil {
		return x.AppleID
	}
	return 0
}

type ReplyReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewID      int64                  `protobuf:"varint,1,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	StoreID       int64                  `protobuf:"varint,2,opt,name=storeID,proto3" json:"storeID,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Picinfo       string                 `protobuf:"bytes,4,opt,name=picinfo,proto3" json:"picinfo,omitempty"`
	VideoInfo     string                 `protobuf:"bytes,5,opt,name=videoInfo,proto3" json:"videoInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyReviewRequest) Reset() {
	*x = ReplyReviewRequest{}
	mi := &file_review_v1_review_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyReviewRequest) ProtoMessage() {}

func (x *ReplyReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyReviewRequest.ProtoReflect.Descriptor instead.
func (*ReplyReviewRequest) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{9}
}

func (x *ReplyReviewRequest) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *ReplyReviewRequest) GetStoreID() int64 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *ReplyReviewRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyReviewRequest) GetPicinfo() string {
	if x != nil {
		return x.Picinfo
	}
	return ""
}

func (x *ReplyReviewRequest) GetVideoInfo() string {
	if x != nil {
		return x.VideoInfo
	}
	return ""
}

type ReplyReviewReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyID       int64                  `protobuf:"varint,1,opt,name=replyID,proto3" json:"replyID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyReviewReply) Reset() {
	*x = ReplyReviewReply{}
	mi := &file_review_v1_review_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyReviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyReviewReply) ProtoMessage() {}

func (x *ReplyReviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyReviewReply.ProtoReflect.Descriptor instead.
func (*ReplyReviewReply) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{10}
}

func (x *ReplyReviewReply) GetReplyID() int64 {
	if x != nil {
		return x.ReplyID
	}
	return 0
}

type ListReviewByUserIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size          int32                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReviewByUserIdRequest) Reset() {
	*x = ListReviewByUserIdRequest{}
	mi := &file_review_v1_review_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReviewByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReviewByUserIdRequest) ProtoMessage() {}

func (x *ListReviewByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReviewByUserIdRequest.ProtoReflect.Descriptor instead.
func (*ListReviewByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{11}
}

func (x *ListReviewByUserIdRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ListReviewByUserIdRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListReviewByUserIdRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListReviewByUserIdReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*ReviewInfo          `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReviewByUserIdReply) Reset() {
	*x = ListReviewByUserIdReply{}
	mi := &file_review_v1_review_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReviewByUserIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReviewByUserIdReply) ProtoMessage() {}

func (x *ListReviewByUserIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReviewByUserIdReply.ProtoReflect.Descriptor instead.
func (*ListReviewByUserIdReply) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{12}
}

func (x *ListReviewByUserIdReply) GetList() []*ReviewInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type AuditAppealRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppealID      int64                  `protobuf:"varint,1,opt,name=appealID,proto3" json:"appealID,omitempty"`
	ReviewID      int64                  `protobuf:"varint,2,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	Status        int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	OpUser        string                 `protobuf:"bytes,4,opt,name=opUser,proto3" json:"opUser,omitempty"`
	OpRemarks     *string                `protobuf:"bytes,5,opt,name=opRemarks,proto3,oneof" json:"opRemarks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditAppealRequest) Reset() {
	*x = AuditAppealRequest{}
	mi := &file_review_v1_review_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditAppealRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditAppealRequest) ProtoMessage() {}

func (x *AuditAppealRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditAppealRequest.ProtoReflect.Descriptor instead.
func (*AuditAppealRequest) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{13}
}

func (x *AuditAppealRequest) GetAppealID() int64 {
	if x != nil {
		return x.AppealID
	}
	return 0
}

func (x *AuditAppealRequest) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *AuditAppealRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AuditAppealRequest) GetOpUser() string {
	if x != nil {
		return x.OpUser
	}
	return ""
}

func (x *AuditAppealRequest) GetOpRemarks() string {
	if x != nil && x.OpRemarks != nil {
		return *x.OpRemarks
	}
	return ""
}

type AuditAppealReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditAppealReply) Reset() {
	*x = AuditAppealReply{}
	mi := &file_review_v1_review_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditAppealReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditAppealReply) ProtoMessage() {}

func (x *AuditAppealReply) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditAppealReply.ProtoReflect.Descriptor instead.
func (*AuditAppealReply) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{14}
}

var File_review_v1_review_proto protoreflect.FileDescriptor

const file_review_v1_review_proto_rawDesc = "" +
	"\n" +
	"\x16review/v1/review.proto\x12\rapi.review.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17validate/validate.proto\"\xe4\x02\n" +
	"\x13CreateReviewRequest\x12\x1f\n" +
	"\x06userId\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x06userId\x12!\n" +
	"\aorderId\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\aorderId\x12%\n" +
	"\x05score\x18\x03 \x01(\x05B\x0f\xfaB\f\x1a\n" +
	"0\x010\x020\x030\x040\x05R\x05score\x123\n" +
	"\fserviceScore\x18\x04 \x01(\x05B\x0f\xfaB\f\x1a\n" +
	"0\x010\x020\x030\x040\x05R\fserviceScore\x121\n" +
	"\vexpreeScore\x18\x05 \x01(\x05B\x0f\xfaB\f\x1a\n" +
	"0\x010\x020\x030\x040\x05R\vexpreeScore\x12$\n" +
	"\acontent\x18\x06 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\b\x18\xff\x01R\acontent\x12\x18\n" +
	"\apicinfo\x18\a \x01(\tR\apicinfo\x12\x1c\n" +
	"\tvideoInfo\x18\b \x01(\tR\tvideoInfo\x12\x1c\n" +
	"\tannoymous\x18\t \x01(\bR\tannoymous\"/\n" +
	"\x11CreateReviewReply\x12\x1a\n" +
	"\breviewId\x18\x01 \x01(\x03R\breviewId\"7\n" +
	"\x10GetReviewRequest\x12#\n" +
	"\breviewID\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\breviewID\"?\n" +
	"\x0eGetReviewReply\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.api.review.v1.ReviewInfoR\x04data\"\xa2\x02\n" +
	"\n" +
	"ReviewInfo\x12\x1a\n" +
	"\breviewID\x18\x01 \x01(\x03R\breviewID\x12\x16\n" +
	"\x06userID\x18\x02 \x01(\x03R\x06userID\x12\x18\n" +
	"\aorderID\x18\x03 \x01(\x03R\aorderID\x12\x14\n" +
	"\x05score\x18\x04 \x01(\x05R\x05score\x12\"\n" +
	"\fserviceScore\x18\x05 \x01(\x05R\fserviceScore\x12\"\n" +
	"\fexpressScore\x18\x06 \x01(\x05R\fexpressScore\x12\x18\n" +
	"\acontent\x18\a \x01(\tR\acontent\x12\x18\n" +
	"\apicInfo\x18\b \x01(\tR\apicInfo\x12\x1c\n" +
	"\tvideoInfo\x18\t \x01(\tR\tvideoInfo\x12\x16\n" +
	"\x06status\x18\n" +
	" \x01(\x05R\x06status\"\xcf\x01\n" +
	"\x12AuditRrviewRequest\x12#\n" +
	"\breviewID\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\breviewID\x12#\n" +
	"\x06status\x18\x02 \x01(\x05B\v\xfaB\b\x1a\x060\n" +
	"0\x140\x1eR\x06status\x12\x1f\n" +
	"\x06opUser\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\bR\x06opUser\x12#\n" +
	"\bopReason\x18\x04 \x01(\tB\a\xfaB\x04r\x02\x10\bR\bopReason\x12\x1d\n" +
	"\aopMarks\x18\x05 \x01(\tH\x00R\aopMarks\x88\x01\x01B\n" +
	"\n" +
	"\b_opMarks\"F\n" +
	"\x10AuditRrviewReply\x12\x1a\n" +
	"\breviewID\x18\x01 \x01(\x03R\breviewID\x12\x16\n" +
	"\x06status\x18\x02 \x01(\x05R\x06status\"\xdf\x01\n" +
	"\x13AppealReviewRequest\x12#\n" +
	"\breviewID\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\breviewID\x12!\n" +
	"\astoreID\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\astoreID\x12\"\n" +
	"\x06reason\x18\x03 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\b\x18\xc8\x01R\x06reason\x12$\n" +
	"\acontent\x18\x04 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\b\x18\xc8\x01R\acontent\x12\x18\n" +
	"\apicinfo\x18\a \x01(\tR\apicinfo\x12\x1c\n" +
	"\tvideoInfo\x18\b \x01(\tR\tvideoInfo\"-\n" +
	"\x11AppealReviewReply\x12\x18\n" +
	"\aappleID\x18\x01 \x01(\x03R\aappleID\"\xba\x01\n" +
	"\x12ReplyReviewRequest\x12#\n" +
	"\breviewID\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\breviewID\x12!\n" +
	"\astoreID\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\astoreID\x12$\n" +
	"\acontent\x18\x03 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\b\x18\xc8\x01R\acontent\x12\x18\n" +
	"\apicinfo\x18\x04 \x01(\tR\apicinfo\x12\x1c\n" +
	"\tvideoInfo\x18\x05 \x01(\tR\tvideoInfo\",\n" +
	"\x10ReplyReviewReply\x12\x18\n" +
	"\areplyID\x18\x01 \x01(\x03R\areplyID\"v\n" +
	"\x19ListReviewByUserIdRequest\x12\x1f\n" +
	"\x06userID\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x06userID\x12\x1b\n" +
	"\x04page\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x04page\x12\x1b\n" +
	"\x04size\x18\x03 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x04size\"H\n" +
	"\x17ListReviewByUserIdReply\x12-\n" +
	"\x04list\x18\x01 \x03(\v2\x19.api.review.v1.ReviewInfoR\x04list\"\xd1\x01\n" +
	"\x12AuditAppealRequest\x12#\n" +
	"\bappealID\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\bappealID\x12#\n" +
	"\breviewID\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\breviewID\x12\x1f\n" +
	"\x06status\x18\x03 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x06status\x12\x1f\n" +
	"\x06opUser\x18\x04 \x01(\tB\a\xfaB\x04r\x02\x10\x02R\x06opUser\x12!\n" +
	"\topRemarks\x18\x05 \x01(\tH\x00R\topRemarks\x88\x01\x01B\f\n" +
	"\n" +
	"_opRemarks\"\x12\n" +
	"\x10AuditAppealReply2\xab\x06\n" +
	"\x06Review\x12k\n" +
	"\fCreateReview\x12\".api.review.v1.CreateReviewRequest\x1a .api.review.v1.CreateReviewReply\"\x15\x82\xd3\xe4\x93\x02\x0f:\x01*\"\n" +
	"/v1/review\x12j\n" +
	"\tGetReview\x12\x1f.api.review.v1.GetReviewRequest\x1a\x1d.api.review.v1.GetReviewReply\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/review/{reviewID}\x12m\n" +
	"\vAuditRrview\x12!.api.review.v1.AuditRrviewRequest\x1a\x1f.api.review.v1.AuditRrviewReply\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0fv1/review/audit\x12r\n" +
	"\fAppealReview\x12\".api.review.v1.AppealReviewRequest\x1a .api.review.v1.AppealReviewReply\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/review/appeal\x12n\n" +
	"\vReplyReview\x12!.api.review.v1.ReplyReviewRequest\x1a\x1f.api.review.v1.ReplyReviewReply\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/review/reply\x12n\n" +
	"\vAuditAppeal\x12!.api.review.v1.AuditAppealRequest\x1a\x1f.api.review.v1.AuditAppealReply\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/appeal/audit\x12\x84\x01\n" +
	"\x12ListReviewByUserId\x12(.api.review.v1.ListReviewByUserIdRequest\x1a&.api.review.v1.ListReviewByUserIdReply\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/{userID}/reviewsB2\n" +
	"\rapi.review.v1P\x01Z\x1fservice-review/api/review/v1;v1b\x06proto3"

var (
	file_review_v1_review_proto_rawDescOnce sync.Once
	file_review_v1_review_proto_rawDescData []byte
)

func file_review_v1_review_proto_rawDescGZIP() []byte {
	file_review_v1_review_proto_rawDescOnce.Do(func() {
		file_review_v1_review_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_review_v1_review_proto_rawDesc), len(file_review_v1_review_proto_rawDesc)))
	})
	return file_review_v1_review_proto_rawDescData
}

var file_review_v1_review_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_review_v1_review_proto_goTypes = []any{
	(*CreateReviewRequest)(nil),       // 0: api.review.v1.CreateReviewRequest
	(*CreateReviewReply)(nil),         // 1: api.review.v1.CreateReviewReply
	(*GetReviewRequest)(nil),          // 2: api.review.v1.GetReviewRequest
	(*GetReviewReply)(nil),            // 3: api.review.v1.GetReviewReply
	(*ReviewInfo)(nil),                // 4: api.review.v1.ReviewInfo
	(*AuditRrviewRequest)(nil),        // 5: api.review.v1.AuditRrviewRequest
	(*AuditRrviewReply)(nil),          // 6: api.review.v1.AuditRrviewReply
	(*AppealReviewRequest)(nil),       // 7: api.review.v1.AppealReviewRequest
	(*AppealReviewReply)(nil),         // 8: api.review.v1.AppealReviewReply
	(*ReplyReviewRequest)(nil),        // 9: api.review.v1.ReplyReviewRequest
	(*ReplyReviewReply)(nil),          // 10: api.review.v1.ReplyReviewReply
	(*ListReviewByUserIdRequest)(nil), // 11: api.review.v1.ListReviewByUserIdRequest
	(*ListReviewByUserIdReply)(nil),   // 12: api.review.v1.ListReviewByUserIdReply
	(*AuditAppealRequest)(nil),        // 13: api.review.v1.AuditAppealRequest
	(*AuditAppealReply)(nil),          // 14: api.review.v1.AuditAppealReply
}
var file_review_v1_review_proto_depIdxs = []int32{
	4,  // 0: api.review.v1.GetReviewReply.data:type_name -> api.review.v1.ReviewInfo
	4,  // 1: api.review.v1.ListReviewByUserIdReply.list:type_name -> api.review.v1.ReviewInfo
	0,  // 2: api.review.v1.Review.CreateReview:input_type -> api.review.v1.CreateReviewRequest
	2,  // 3: api.review.v1.Review.GetReview:input_type -> api.review.v1.GetReviewRequest
	5,  // 4: api.review.v1.Review.AuditRrview:input_type -> api.review.v1.AuditRrviewRequest
	7,  // 5: api.review.v1.Review.AppealReview:input_type -> api.review.v1.AppealReviewRequest
	9,  // 6: api.review.v1.Review.ReplyReview:input_type -> api.review.v1.ReplyReviewRequest
	13, // 7: api.review.v1.Review.AuditAppeal:input_type -> api.review.v1.AuditAppealRequest
	11, // 8: api.review.v1.Review.ListReviewByUserId:input_type -> api.review.v1.ListReviewByUserIdRequest
	1,  // 9: api.review.v1.Review.CreateReview:output_type -> api.review.v1.CreateReviewReply
	3,  // 10: api.review.v1.Review.GetReview:output_type -> api.review.v1.GetReviewReply
	6,  // 11: api.review.v1.Review.AuditRrview:output_type -> api.review.v1.AuditRrviewReply
	8,  // 12: api.review.v1.Review.AppealReview:output_type -> api.review.v1.AppealReviewReply
	10, // 13: api.review.v1.Review.ReplyReview:output_type -> api.review.v1.ReplyReviewReply
	14, // 14: api.review.v1.Review.AuditAppeal:output_type -> api.review.v1.AuditAppealReply
	12, // 15: api.review.v1.Review.ListReviewByUserId:output_type -> api.review.v1.ListReviewByUserIdReply
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_review_v1_review_proto_init() }
func file_review_v1_review_proto_init() {
	if File_review_v1_review_proto != nil {
		return
	}
	file_review_v1_review_proto_msgTypes[5].OneofWrappers = []any{}
	file_review_v1_review_proto_msgTypes[13].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_review_v1_review_proto_rawDesc), len(file_review_v1_review_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_review_v1_review_proto_goTypes,
		DependencyIndexes: file_review_v1_review_proto_depIdxs,
		MessageInfos:      file_review_v1_review_proto_msgTypes,
	}.Build()
	File_review_v1_review_proto = out.File
	file_review_v1_review_proto_goTypes = nil
	file_review_v1_review_proto_depIdxs = nil
}
