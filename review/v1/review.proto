syntax = "proto3";

package api.review.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "service-review/api/review/v1;v1";
option java_multiple_files = true;
option java_package = "api.review.v1";

service Review {
	// c端创建评价
	rpc CreateReview (CreateReviewRequest) returns (CreateReviewReply) {
		option (google.api.http) = {
			post: "/v1/review"
			body: "*"
		};
	};
	// c端获取评价详情
	rpc GetReview (GetReviewRequest) returns (GetReviewReply) {
		option (google.api.http) = {
			get: "/v1/review/{reviewID}"
		};
	};

	// o端审核评价
	rpc AuditRrview(AuditRrviewRequest) returns (AuditRrviewReply) {
		option (google.api.http) = {
			post: "v1/review/audit"
			body: "*"
		};
	}

	// b端申述评价
	rpc AppealReview(AppealReviewRequest) returns (AppealReviewReply) {
		option  (google.api.http) = {
			post: "/v1/review/appeal"
			body: "*"
		};
	}

	// b端回复评价
	rpc ReplyReview(ReplyReviewRequest) returns (ReplyReviewReply) {
		option  (google.api.http) = {
			post: "/v1/review/reply"
			body: "*"
		};
	}

	// o 端评价申诉审核
	rpc AuditAppeal(AuditAppealRequest) returns (AuditAppealReply) {
		option (google.api.http) = {
			post: "/v1/appeal/audit",
			body: "*"
		};
	}
	// C端查看userID下所有评价
	rpc ListReviewByUserId(ListReviewByUserIdRequest) returns (ListReviewByUserIdReply) {
		option (google.api.http) = {
			get: "/v1/{userID}/reviews",
		};
	}

}

message CreateReviewRequest {
	int64 userId = 1 [(validate.rules).int64 = {gt: 0}];
	int64 orderId = 2 [(validate.rules).int64 = {gt: 0}];
	int32 score = 3 [(validate.rules).int32 = {in: [1,2,3,4,5]}];
	int32 serviceScore = 4 [(validate.rules).int32 = {in: [1,2,3,4,5]}];
	int32 expreeScore = 5 [(validate.rules).int32 = {in: [1,2,3,4,5]}];
	string  content = 6 [(validate.rules).string = {min_len: 8, max_len: 255}];
	string picinfo = 7;
	string videoInfo = 8;
	bool annoymous = 9;
}
message CreateReviewReply {
	int64 reviewId = 1;
}

message GetReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
}
message GetReviewReply {
	ReviewInfo data  = 1;
}

message ReviewInfo{
	int64 reviewID = 1;
	int64 userID = 2;
	int64 orderID = 3;
	int32 score = 4;
	int32 serviceScore = 5;
	int32 expressScore = 6;
	string content = 7;
	string picInfo = 8;
	string videoInfo = 9;
	int32 status = 10;
}

message AuditRrviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
	int32 status = 2 [(validate.rules).int32 = {in: [10,20,30]}];
	string opUser = 3 [(validate.rules).string = {min_len: 8}];
	string opReason = 4 [(validate.rules).string = {min_len: 8}];
	optional string opMarks = 5;
}

message AuditRrviewReply {
	int64 reviewID = 1;
	int32 status = 2;
}

message AppealReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
	int64 storeID = 2  [(validate.rules).int64 = {gt: 0}];
	string reason = 3  [(validate.rules).string = {min_len: 8, max_len: 200}];
	string content = 4 [(validate.rules).string = {min_len: 8, max_len: 200}];
	string picinfo = 7;
	string videoInfo = 8;
}

message AppealReviewReply {
	int64 appleID = 1;
}

message ReplyReviewRequest{
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
	int64 storeID = 2  [(validate.rules).int64 = {gt: 0}];
	string content = 3 [(validate.rules).string = {min_len: 8, max_len: 200}];
	string picinfo = 4;
	string videoInfo = 5;
}

message ReplyReviewReply{
	int64 replyID = 1;
}

message ListReviewByUserIdRequest{
	int64 userID = 1 [(validate.rules).int64 = {gt: 0}];
	int32 page = 2 [(validate.rules).int32 = {gt: 0}];
	int32 size = 3 [(validate.rules).int32 = {gt: 0}];
}

message ListReviewByUserIdReply{
	repeated ReviewInfo list = 1;
}

message AuditAppealRequest{
	int64 appealID = 1 [(validate.rules).int64 = {gt: 0}];
	int64 reviewID = 2 [(validate.rules).int64 = {gt: 0}];
	int32 status = 3 [(validate.rules).int32 = {gt: 0}];
	string opUser = 4 [(validate.rules).string = {min_len: 2}];
	optional string opRemarks = 5;
}

message AuditAppealReply{
}